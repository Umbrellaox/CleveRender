<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>rasterizer.h</FILENAME>
      <LINE>19</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Rasterizer::{ctor}</FUNCTION>
    <DECORATED>??0Rasterizer@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>rasterizer.h</FILENAME>
      <LINE>19</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Rasterizer::{ctor}</FUNCTION>
    <DECORATED>??0Rasterizer@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::{ctor}</FUNCTION>
    <DECORATED>??0TGAImage@@QEAA@HHH@Z</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::{ctor}</FUNCTION>
    <DECORATED>??0TGAImage@@QEAA@HHH@Z</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::read_tga_file</FUNCTION>
    <DECORATED>?read_tga_file@TGAImage@@QEAA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::read_tga_file</FUNCTION>
    <DECORATED>?read_tga_file@TGAImage@@QEAA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>64</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::load_rle_data</FUNCTION>
    <DECORATED>?load_rle_data@TGAImage@@IEAA_NAEAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>63</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::write_tga_file</FUNCTION>
    <DECORATED>?write_tga_file@TGAImage@@QEBA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N1@Z</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::write_tga_file</FUNCTION>
    <DECORATED>?write_tga_file@TGAImage@@QEBA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N1@Z</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::unload_rle_data</FUNCTION>
    <DECORATED>?unload_rle_data@TGAImage@@IEBA_NAEAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>174</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>216</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::get</FUNCTION>
    <DECORATED>?get@TGAImage@@QEBA?AUTGAColor@@HH@Z</DECORATED>
    <FUNCLINE>213</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>216</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::get</FUNCTION>
    <DECORATED>?get@TGAImage@@QEBA?AUTGAColor@@HH@Z</DECORATED>
    <FUNCLINE>213</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>221</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::set</FUNCTION>
    <DECORATED>?set@TGAImage@@QEAAXHHAEBUTGAColor@@@Z</DECORATED>
    <FUNCLINE>219</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>221</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::set</FUNCTION>
    <DECORATED>?set@TGAImage@@QEAAXHHAEBUTGAColor@@@Z</DECORATED>
    <FUNCLINE>219</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>251</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::flip_vertically</FUNCTION>
    <DECORATED>?flip_vertically@TGAImage@@QEAAXXZ</DECORATED>
    <FUNCLINE>249</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>256</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::flip_vertically</FUNCTION>
    <DECORATED>?flip_vertically@TGAImage@@QEAAXXZ</DECORATED>
    <FUNCLINE>249</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>256</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::flip_vertically</FUNCTION>
    <DECORATED>?flip_vertically@TGAImage@@QEAAXXZ</DECORATED>
    <FUNCLINE>249</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>268</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::clear</FUNCTION>
    <DECORATED>?clear@TGAImage@@QEAAXXZ</DECORATED>
    <FUNCLINE>267</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>268</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::clear</FUNCTION>
    <DECORATED>?clear@TGAImage@@QEAAXXZ</DECORATED>
    <FUNCLINE>267</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>273</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::scale</FUNCTION>
    <DECORATED>?scale@TGAImage@@QEAAXHH@Z</DECORATED>
    <FUNCLINE>271</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>273</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::scale</FUNCTION>
    <DECORATED>?scale@TGAImage@@QEAAXHH@Z</DECORATED>
    <FUNCLINE>271</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::scale</FUNCTION>
    <DECORATED>?scale@TGAImage@@QEAAXHH@Z</DECORATED>
    <FUNCLINE>271</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Frisk\source\repos\CleveRender\CleveRender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>278</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::scale</FUNCTION>
    <DECORATED>?scale@TGAImage@@QEAAXHH@Z</DECORATED>
    <FUNCLINE>271</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>